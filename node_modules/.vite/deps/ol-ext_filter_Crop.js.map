{
  "version": 3,
  "sources": ["../../ol-ext/filter/Crop.js"],
  "sourcesContent": ["/*\tCopyright (c) 2016 Jean-Marc VIGLINO, \r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\n\r\nimport ol_filter_Mask from './Mask.js'\r\n\r\n/** Crop drawing using an ol.Feature\r\n * @constructor\r\n * @requires ol.filter\r\n * @requires ol_filter_Mask\r\n * @extends {ol_filter_Mask}\r\n * @param {Object} [options]\r\n *  @param {ol.Feature} [options.feature] feature to crop with\r\n *  @param {number} [options.shadowWidth=0] shadow width, default no shadow\r\n *  @param {boolean} [options.shadowMapUnits=false] true if the shadow width is in mapUnits\r\n *  @param {ol.colorLike} [options.shadowColor='rgba(0,0,0,.5)'] shadow color, default \r\n *  @param {boolean} [options.inner=false] mask inner, default false\r\n *  @param {boolean} [options.wrapX=false] wrap around the world, default false\r\n */\r\nvar ol_filter_Crop = class olfilterCrop extends ol_filter_Mask {\r\n  constructor(options) {\r\n    options = options || {};\r\n    super(options);\r\n  }\r\n  /**\r\n   * @param {ol/Event} e \r\n   * @private\r\n   */\r\n  precompose(e) {\r\n    if (this.feature_) {\r\n      var ctx = e.context;\r\n      ctx.save();\r\n      this.drawFeaturePath_(e, this.get('inner'));\r\n      ctx.clip('evenodd');\r\n    }\r\n  }\r\n  /**\r\n   * @param {ol/Event} e \r\n   * @private\r\n   */\r\n  postcompose(e) {\r\n    if (this.feature_) {\r\n      var ctx = e.context;\r\n      ctx.restore();\r\n      // Draw shadow\r\n      if (this.get('shadowWidth')) {\r\n        ctx.save()\r\n        var width = this.get('shadowWidth') * e.frameState.pixelRatio\r\n        if (this.get('shadowMapUnits')) width /= e.frameState.viewState.resolution;\r\n        this.drawFeaturePath_(e, !this.get('inner'));\r\n        ctx.clip('evenodd');\r\n        ctx.filter = 'blur(' + width + 'px)';\r\n        ctx.strokeStyle = this._shadowColor;\r\n        ctx.lineCap = 'round';\r\n        ctx.lineJoin = 'round';\r\n        ctx.lineWidth = width;\r\n        ctx.stroke();\r\n        ctx.restore()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ol_filter_Crop\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,IAAI,iBAAiB,MAAM,qBAAqB,aAAe;AAAA,EAC7D,YAAY,SAAS;AACnB,cAAU,WAAW,CAAC;AACtB,UAAM,OAAO;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,GAAG;AACZ,QAAI,KAAK,UAAU;AACjB,UAAI,MAAM,EAAE;AACZ,UAAI,KAAK;AACT,WAAK,iBAAiB,GAAG,KAAK,IAAI,OAAO,CAAC;AAC1C,UAAI,KAAK,SAAS;AAAA,IACpB;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,GAAG;AACb,QAAI,KAAK,UAAU;AACjB,UAAI,MAAM,EAAE;AACZ,UAAI,QAAQ;AAEZ,UAAI,KAAK,IAAI,aAAa,GAAG;AAC3B,YAAI,KAAK;AACT,YAAI,QAAQ,KAAK,IAAI,aAAa,IAAI,EAAE,WAAW;AACnD,YAAI,KAAK,IAAI,gBAAgB,EAAG,UAAS,EAAE,WAAW,UAAU;AAChE,aAAK,iBAAiB,GAAG,CAAC,KAAK,IAAI,OAAO,CAAC;AAC3C,YAAI,KAAK,SAAS;AAClB,YAAI,SAAS,UAAU,QAAQ;AAC/B,YAAI,cAAc,KAAK;AACvB,YAAI,UAAU;AACd,YAAI,WAAW;AACf,YAAI,YAAY;AAChB,YAAI,OAAO;AACX,YAAI,QAAQ;AAAA,MACd;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,eAAQ;",
  "names": []
}
