import {
  Base_default
} from "./chunk-MYWZCSP7.js";
import "./chunk-7M2R3MTJ.js";
import "./chunk-64N4X4CB.js";
import "./chunk-5RHQVMYD.js";
import "./chunk-EWTE5DHJ.js";

// node_modules/ol-ext/particule/Snow.js
var ol_particule_Snow = class olparticuleSnow extends Base_default {
  constructor(options) {
    options = options || {};
    super(options);
    this.z = (Math.floor(Math.random() * 5) + 1) / 5;
    this.angle = Math.random() * Math.PI;
    var canvas = document.createElement("CANVAS");
    canvas.width = 20;
    canvas.height = 20;
    var ctx = canvas.getContext("2d");
    var grd = ctx.createRadialGradient(10, 10, 0, 10, 10, 10);
    grd.addColorStop(0, "rgba(255, 255, 255,1)");
    grd.addColorStop(0.8, "rgba(210, 236, 242,.8)");
    grd.addColorStop(1, "rgba(237, 247, 249,0)");
    this.image = canvas;
    ctx.fillStyle = grd;
    ctx.fillRect(0, 0, canvas.width, canvas.height);
  }
  /** Draw the particule
   * @param {CanvasRenderingContext2D } ctx
   */
  draw(ctx) {
    ctx.save();
    ctx.translate(this.coordinate[0], this.coordinate[1]);
    ctx.globalAlpha = 0.4 + this.z / 2;
    ctx.scale(this.z, this.z);
    ctx.drawImage(this.image, -10, -10);
    ctx.restore();
  }
  /** Update the particule
   * @param {number} dt timelapes since last call
   */
  update(dt) {
    var speed = this.getOverlay().get("speed") * dt / this.getOverlay()._fps * this.z * 5;
    var angle = this.getOverlay().get("angle");
    this.angle = this.angle + dt / this.getOverlay()._fps / 100;
    this.coordinate[0] += Math.sin(this.angle + this.z) * 2 + speed * Math.cos(angle);
    this.coordinate[1] += Math.cos(this.angle) + speed * Math.sin(angle);
  }
};
var Snow_default = ol_particule_Snow;
export {
  Snow_default as default
};
//# sourceMappingURL=ol-ext_particule_Snow.js.map
